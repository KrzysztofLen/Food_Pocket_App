// Placeholder
@mixin placeholder {
	::-webkit-input-placeholder {@content}
	:-moz-placeholder           {@content}
	::-moz-placeholder          {@content}
	:-ms-input-placeholder      {@content}
}

// Font-size
@mixin font-size($sizeValue: 1.6) {
	font-size: ($sizeValue * 10) + px;
	font-size: $sizeValue + rem;
}
/// Helper mixin to add font family in a single line.
/// This mixin is essentially a short hand to define
/// `font-family` simultaneously.
///
/// @group shorthand
///
/// @example scss - Sizing `.foo`
///   .foo {
///     @include font-family('Kanit', sans-serif;);
///   }
@mixin font-family($fontName) {
	font-family: $fontName;
}

// Font weight
@mixin font-weight($weight) {
	font-weight: $weight;
}


// Full font-style
@mixin font-style($weight, $size, $name) {
	@include font-weight($weight);
	@include font-size($size);
	@include font-family($name);
}

// Font Smoothing
@mixin smooth {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

// Pseudoelements
@mixin pseudo($display: block, $position: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $position;
}

// Breakpoints
$breakpoints: (
	'tablet': ( min-width:  768px ),
	'laptop': ( min-width:  1220px ),
	'desktop': ( min-width:  1600px )
);
@mixin media($name) {
	@if map-has-key($breakpoints, $name) {
		@media #{inspect(map-get($breakpoints, $name))} {
			@content;
		}
	}
}

// Transition mixins
@mixin transition($duration) {
	-webkit-transition:all $duration ease-in-out;
	-moz-transition:all $duration ease-in-out;
	transition:all $duration ease-in-out;
}

// Dark overlay mixin
@mixin dark-overlay {
	&:after {
		content: "";
		width: 100%;
		height: auto;
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		bottom: 0;
	}
}

// Button hover effect
@mixin button-hover {
	border: 1px solid;
	box-shadow: inset 0 0 20px rgba(255, 255, 255, .5), 0 0 20px rgba(255, 255, 255, .2);
	outline-color: rgba(255, 255, 255, 0);
	outline-offset: 15px;
	text-shadow: 1px 1px 2px #427388;
}

// Centered Vertical
@mixin centered-vertical($top, $left) {
	position: absolute;
	top: $top;
	left: $left;
	-webkit-transform: translate(-50%, -50%);
	-ms-transform: translate(-50%, -50%);
	transform: translate(-50%, -50%);
}

@mixin transform($property: none) {
	transform: $property;
}

@mixin center($xy:xy) {
	@if $xy == xy {
		left: 50%;
		top: 50%;
		bottom: auto;
		right: auto;
		@include transform(translateX(-50%) translateY(-50%));
	}
	@else if $xy == x {
		left: 50%;
		right: auto;
		@include transform(translateX(-50%));
	}
	@else if $xy == y {
		top: 50%;
		bottom: auto;
		@include transform(translateY(-50%));
	}
}
